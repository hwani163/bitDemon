{
  "_args": [
    [
      {
        "raw": "async-request@^1.2.0",
        "scope": null,
        "escapedName": "async-request",
        "name": "async-request",
        "rawSpec": "^1.2.0",
        "spec": ">=1.2.0 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\Seokhwan\\Desktop\\bitDemon"
    ]
  ],
  "_from": "async-request@>=1.2.0 <2.0.0",
  "_id": "async-request@1.2.0",
  "_inCache": true,
  "_location": "/async-request",
  "_nodeVersion": "1.6.2",
  "_npmUser": {
    "name": "gajus",
    "email": "gk@anuary.com"
  },
  "_npmVersion": "2.7.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "async-request@^1.2.0",
    "scope": null,
    "escapedName": "async-request",
    "name": "async-request",
    "rawSpec": "^1.2.0",
    "spec": ">=1.2.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/async-request/-/async-request-1.2.0.tgz",
  "_shasum": "b407af8b972d0292af659f190097f121dfa6ac9a",
  "_shrinkwrap": null,
  "_spec": "async-request@^1.2.0",
  "_where": "C:\\Users\\Seokhwan\\Desktop\\bitDemon",
  "author": {
    "name": "Gajus Kuizinas",
    "email": "gk@anuary.com",
    "url": "gajus@gajus.com"
  },
  "bugs": {
    "url": "https://github.com/gajus/async-request/issues"
  },
  "dependencies": {
    "lodash": "^3.5.0",
    "request": "^2.53.0",
    "tough-cookie": "^0.12.1"
  },
  "description": "async-request is a wrapper for request that uses ES7 async functions.",
  "devDependencies": {
    "babel": "^4.7.16",
    "babel-eslint": "^2.0.2",
    "babel-runtime": "^4.7.16",
    "chai": "^2.1.2",
    "gulp": "^3.8.11",
    "gulp-babel": "^4.0.0",
    "gulp-eslint": "^0.7.0",
    "gulp-mocha": "^2.0.0",
    "gulp-sourcemaps": "^1.5.1",
    "mocha": "^2.2.1",
    "nock": "^1.2.1"
  },
  "directories": {},
  "dist": {
    "shasum": "b407af8b972d0292af659f190097f121dfa6ac9a",
    "tarball": "https://registry.npmjs.org/async-request/-/async-request-1.2.0.tgz"
  },
  "gitHead": "bf0d96d31f5108ff39188b70634195a8528fe4da",
  "homepage": "https://github.com/gajus/async-request#readme",
  "keywords": [
    "request",
    "http",
    "async",
    "promise"
  ],
  "license": "BSD-3-Clause",
  "main": "src/main.js",
  "maintainers": [
    {
      "name": "gajus",
      "email": "gk@anuary.com"
    }
  ],
  "name": "async-request",
  "optionalDependencies": {},
  "readme": "# async-request\n\n[![NPM version](http://img.shields.io/npm/v/async-request.svg?style=flat)](https://www.npmjs.org/package/async-request)\n[![Travis build status](http://img.shields.io/travis/gajus/async-request/master.svg?style=flat)](https://travis-ci.org/gajus/async-request)\n[![Dependency Status](https://david-dm.org/gajus/async-request.svg?style=flat)](https://david-dm.org/gajus/async-request)\n\nasync-request is a wrapper for [request](https://www.npmjs.com/package/request) that uses [ES7 async functions](https://github.com/lukehoban/ecmascript-asyncawait).\n\n## Usage\n\n```js\nlet request = require('async-request'),\n    response;\n\ntry {\n    response = await request('http://gajus.com/');\n\n    // response.statusCode\n    // response.headers\n    // response.body\n\n    await request('http://gajus.com', {\n        // This example demonstrates all of the supported options.\n        // Request method (uppercase): POST, DELETE, ...\n        method: 'POST',\n        data: {\n            foo: 'bar'\n        },\n        headers: {\n            foo: 'bar'\n        },\n        proxy: 'http://127.0.0.1:8000',\n        // To create a new cookie jar.\n        cookieJar: true,\n        // To use a custom/existing cookie jar.\n        // https://www.npmjs.com/package/tough-cookie\n        cookieJar: new tough.CookieJar()\n    });\n} catch (e) {\n\n}\n\n// Returns a wrapper for the request using predefined custom options.\nrequest = request.defaults({headers: {foo: 'bar'}});\n\n// Returns the current default options.\nrequest.defaults();\n// {foo: 'bar'}\n\n// Makes a HTTP GET request with {foo: 'bar'} headers.\nawait request('http://gajus.com');\n```\n\n## Debugging\n\n`async-request` does not provide (expose) inbuilt debugging capabilities. Use a proxy (e.g. https://mitmproxy.org/) to intercept and analyze HTTP traffic.\n\n## API\n\n* Make sure API is based on https://fetch.spec.whatwg.org/ standard.\n\n## Running\n\nAsync function behavior has been accepted into stage 1 (\"Proposal\") of the ECMASCript 7 spec process in January 2014. This means that it cannot be used out of the box with node.js or iojs without a transpiler.\n\nThis library is using [Babel](https://babeljs.io/) to compile ES7 code into ES5. Refer to the [./gulpfile.js](./gulpfile.js).\n\n## Beware\n\nThis library has been created as part of [ES7 async function](https://github.com/lukehoban/ecmascript-asyncawait) proposal research. It covers basic use of [request](https://www.npmjs.com/package/request). I do not advise to use it in production, though I will be testing it in several private projects and update as I go – contributions are welcome too.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gajus/async-request.git"
  },
  "scripts": {},
  "version": "1.2.0"
}
